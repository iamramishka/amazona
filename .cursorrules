# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[x]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

## Lessons

1. Use `npx shadcn@latest add [component]` instead of `npx shadcn-ui@latest add [component]` when installing Shadcn UI components.
2. In Next.js 14+, page props params must be typed as a Promise. Example:
   ```typescript
   type tParams = Promise<{ id: string }>
   interface PageProps {
     params: tParams
   }
   ```
   Then await the params in the component:
   ```typescript
   export default async function Page(props: PageProps) {
     const { id } = await props.params
   }
   ```
3. Use `const session = await auth()` instead of `const session = await getServerSession(authOptions)` for Next.js authentication. The new `auth()` function is the recommended way to get the session in Next.js Auth v5.
4. When importing `useRouter` from 'next/navigation', the component must be marked as a client component using the `'use client'` directive at the top of the file, as this hook only works on the client side.
5. When creating layouts in Next.js 14+, use the `(group)` folder naming convention to organize related routes without affecting the URL structure.
6. For sticky headers with backdrop blur, use the following classes:
   ```tsx
   className="sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60"
   ```
   This provides a modern, translucent effect with fallback for browsers that don't support backdrop-filter.

## Scratchpad

### 1. Project Setup and Configuration [ ]

- [x] Initialize Next.js 15 project with TypeScript
- [x] Set up project structure and folders
- [x] Configure ESLint and Prettier
- [x] Install and configure dependencies:
  - [x] Shadcn UI components
  - [x] Lucide icons
  - [x] Zod for validation
  - [x] Zustand for state management
  - [x] Recharts for analytics
  - [x] Resend for emails
  - [x] Uploadthing for file uploads
  - [x] Prisma ORM
  - [x] PostgreSQL database
  - [x] NextAuth.js beta for authentication
  - [x] Stripe for payments

### 2. Database and Authentication [ ]

- [x] Set up PostgreSQL database
- [x] Configure Prisma schema:
  - [x] User model
  - [x] Product model
  - [x] Category model
  - [x] Order model
  - [x] Review model
  - [x] Cart model
- [-] Implement NextAuth.js authentication (Deferred):
  - Email/Password
  - OAuth providers (Google, GitHub)
  - JWT handling
  - Protected routes

### 3. Core Features - Customer Side [ ]

- [x] Home Layout:
  - [x] Create `(home)` folder in `app` directory
  - [x] Header with logo, search bar, and navigation
  - [x] Footer with links and social media
- [x] Homepage:
  - [x] Banner carousel
  - [x] Latest products
- [ ] Products Catalog:
  - [ ] Sidebar with categories and filters
  - [ ] Search results
  - [ ] Product grid
  - [ ] Pagination
- [ ] Product pages:
  - [ ] Create product detail page layout
  - [ ] Implement image gallery with thumbnails
  - [ ] Add product information section
  - [ ] Reviews and ratings section
  - [ ] Related products section
- [ ] Shopping cart
- [ ] Checkout process
- [ ] User dashboard

### 4. Admin Dashboard [ ]

- [ ] Admin authentication and authorization
- [ ] Dashboard overview:
  - [ ] Layout and Structure
  - [ ] Key Metrics Cards
  - [ ] Sales Analytics
  - [ ] Recent Orders Table
  - [ ] Low Stock Alerts
  - [ ] Top Products
  - [ ] Customer Insights
  - [ ] Real-time Updates
  - [ ] Export and Reports
- [ ] Product management
- [ ] Order management
- [ ] User management

### 5. Advanced Features [ ]

- [ ] Real-time notifications
- [ ] Email system (Resend)
- [ ] Search optimization
- [ ] Performance optimization
- [ ] Analytics and reporting

### 6. Testing and Deployment [ ]

- [ ] Unit testing
- [ ] Integration testing
- [ ] E2E testing
- [ ] Security audit
- [ ] Production deployment

### 7. Documentation [ ]

- [ ] API documentation
- [ ] User guide
- [ ] Admin documentation
- [ ] Deployment guide